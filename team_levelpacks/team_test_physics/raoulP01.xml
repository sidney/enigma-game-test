<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
  <el:protected>
    <el:info el:type="level">
      <el:identity el:title="Collisiontest 1" el:subtitle="" el:id="physictest_collision1"/>
      <el:version el:score="1" el:release="1" el:revision="0" el:status="stable"/>
      <el:author el:name="Raoul Bourquin" el:email="" el:homepage=""/>
      <el:copyright>Copyright Â© 2007 Raoul Bourquin</el:copyright>
      <el:license el:type="GPL v2.0 or above" el:open="true"/>
      <el:compatibility el:enigma="0.92">
      </el:compatibility>
      <el:modes el:easy="false" el:single="true" el:network="false"/>
      <el:score el:easy="-" el:difficult="-"/>
    </el:info>
    <el:luamain><![CDATA[
levelh = 13
levelw = 20

create_world(levelw, levelh)

function renderLine( line, pattern)
    for i=1, strlen(pattern) do
        local c = strsub( pattern, i, i)
          if c=="x" then
            oxyd(i-1,line)
        elseif c=="#" then
            set_stone("st-glass",i-1,line)
            set_floor("fl-sahara",i-1,line)
        elseif c==" " then
            set_floor("fl-sahara",i-1,line)
        elseif c=="-" then
            set_floor("fl-space",i-1,line)
        elseif c==">" then
            set_floor("fl-gradient",i-1,line, {type=3, friction=0})
        elseif c=="<" then
            set_floor("fl-gradient",i-1,line, {type=4, friction=0})
        elseif c=="^" then
            set_floor("fl-gradient",i-1,line, {type=2, friction=0})
        elseif c=="v" then
            set_floor("fl-gradient",i-1,line, {type=1, friction=0})
        end
    end
end

renderLine(00 , "####################")
renderLine(01 , "#>----------------<#")
renderLine(02 , "#>-----------------#")
renderLine(03 , "#>----------------<#")
renderLine(04 , "#>------>----------#")
renderLine(05 , "#>->---------------#")
renderLine(06 , "#>----------------<#")
renderLine(07 , "#>----------------<#")
renderLine(08 , "#>>>>>------------<#")
renderLine(09 , "#>>>--->>---->-----#")
renderLine(10 , "#>>----------------#")
renderLine(11 , "#>>--->>------<<---#")
renderLine(12 , "####################")

set_actor("ac-blackball", 0.5,0.5, {player=0})
set_actor("ac-whiteball", 1.5, 1.5, {controllers=0})
set_actor("ac-whiteball", 18.5, 1.5, {controllers=0})
set_actor("ac-whiteball", 1.5, 2.5, {controllers=0})
set_actor("ac-whiteball", 10.5, 2.5, {controllers=0})
set_actor("ac-whiteball", 1.5, 3.5, {controllers=0})
set_actor("ac-whiteball-small", 10, 3.5, {controllers=0})
set_actor("ac-whiteball", 1.5, 4.5, {controllers=0})
set_actor("ac-whiteball-small", 8.5, 4.5, {controllers=0})
set_actor("ac-whiteball", 1.5, 5.5, {controllers=0})
set_actor("ac-whiteball", 3.5, 5.5, {controllers=0})
set_actor("ac-whiteball", 1.5, 6.5, {controllers=0})
set_actor("ac-whiteball", 10, 6.5, {controllers=0})
set_actor("ac-whiteball", 18.5, 6.5, {controllers=0})
set_actor("ac-whiteball", 1.5, 7.5, {controllers=0})
set_actor("ac-whiteball", 5.5, 7.5, {controllers=0})
set_actor("ac-whiteball", 18.5, 7.5, {controllers=0})
set_actor("ac-whiteball", 1.5, 8.5, {controllers=0})
set_actor("ac-whiteball", 18.5, 8.5, {controllers=0})
set_actor("ac-whiteball", 1.5, 9.5, {controllers=0})
set_actor("ac-whiteball", 3.5, 9.5, {controllers=0})
set_actor("ac-whiteball", 5.5, 9.5, {controllers=0})
set_actor("ac-whiteball", 7.5, 9.5, {controllers=0})
set_actor("ac-whiteball", 9.5, 9.5, {controllers=0})
set_actor("ac-whiteball", 11.5, 9.5, {controllers=0})
set_actor("ac-whiteball", 13.5, 9.5, {controllers=0})
set_actor("ac-whiteball", 15.5, 9.5, {controllers=0})
set_actor("ac-whiteball", 1.5, 10.5, {controllers=0})
set_actor("ac-whiteball", 1.5, 11.5, {controllers=0})
    ]]></el:luamain>
    <el:i18n>
      <el:string el:key="title">
        <el:english el:translate="false"/>
      </el:string>
    </el:i18n>
  </el:protected>
</el:level>
