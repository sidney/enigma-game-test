<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<el:level xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://enigma-game.org/schema/level/1 level.xsd" xmlns:el="http://enigma-game.org/schema/level/1">
  <el:protected>
    <el:info el:type="level">
      <el:identity el:title="Test Horse new API" el:subtitle="" el:id="20080116ral551"/>
      <el:version el:score="1" el:release="1" el:revision="$Revision$" el:status="experimental"/>
      <el:author  el:name="Ronald Lamprecht" el:email="ral@users.berlios.de"/>
      <el:copyright>Copyright Â© 2006 Ronald Lamprecht</el:copyright>
      <el:license el:type="GPL v2.0 or above" el:open="true"/>
      <el:compatibility el:enigma="1.10">
      </el:compatibility>
      <el:modes el:easy="false" el:single="true" el:network="false"/>
      <el:comments>
      </el:comments>
      <el:score el:easy="-" el:difficult="-"/>
    </el:info>
    <el:luamain><![CDATA[
wo["ConserveLevel"] = true

ti[" "] = {"fl_sahara"}
ti["outer"] = {"fl_rock", name="outer%%"}
ti["inner"] = {"fl_rock", name="inner%%"}
ti["h"] = {"#ac_horse", name="horse", destination={"outer%1","outer%2","outer%3","outer%4","outer%5","outer%6"}}
ti["s"] = {"st_switch", target="innercircle"}
ti["a"] = {"#ac_marble"}
ti["water"] = {"fl_water", name="water%%"}
ti["H"] = {"#ac_horse", destination={"water%1","water%2","water%3","water%4"}}
ti["B"] = {"st_box"}
ti["."] = {"fl_lawn", "lawn#"}
ti["p"] = {"#ac_horse", "lawnhorse", strength=10, steady=false}
ti["C"] = {"st_switch", "c3c"}
ti["D"] = {"fl_water", "c3d"}
ti["E"] = {"st_box"} .. ti{"it_cross", "c3e"}
ti["F"] = {"st_stoneimpulse", "c3f"}
ti["f"] = {"st_stoneimpulse"}
ti["c"] = {"#ac_horse", "c3horse", strength=20, steady=false, loop=false,
            destination={"c3c","c3d","c3e","c3f"}}
ti["d"] = {"st_switch", target="c3start"}
ti["+"] = {"fl_bluegray", "blue#"}
ti["W"] = {"st_brownie", "brownie"}
ti["q"] = {"#ac_horse", "horse5", strength=20, steady=false, target="h5redir"}

resolver = res.autotile(ti, {"1", "6", "outer"}, {"i", "l", "inner"},
        {"I", "L", "water"})
w, h = wo(resolver, " ", {
"                    ",
"                    ",
"     6        1     ",
"                    ",
"       i    l       ",
"                    ",
" 5       sh      2  ",
"                    ",
"                    ",
"       j    k       ",
"                    ",
"     4        3     ",
"                    ",
"                    ",
"                    ",
"                    ",
"                    ",
"  B  I      J B     ",
"                    ",
"        H           ",
"                    ",
"  B  L      K  B    ",
"                    ",
"                    ",
"                    ",
"           B        ",
"     .......BBBB    ",
"  ....    B.  .B    ",
"  .        BBB..B   ",
"  .     p     B.B   ",
"  .            .    ",
"  ..............    ",
"                    ",
"         Fff        ",
" C c       f        ",
"           f        ",
"           f d      ",
" D       E f        ",
"                    ",
"     BB  B          ",
"     qW  B          ",
"       B            ",
"     B           a  ",
"     B  BB          "
})

no["lawnhorse"]["destination"] = no["lawn#*"]:sort("circular")

function innercircle(value, sender)
    -- demo mixture string tokens with a group
    circle = grp(no["inner%1"], no["inner%2"],no["inner%3"],no["inner%4"])
    horse = no["horse"]
    dest = horse["destination"]
    if value then
        table.insert(dest, circle)
    else
        dest[#dest]=nil
    end
    horse["destination"] = dest
end

function c3start(value, sender)
    no["c3horse"]["destidx"] = 0
end

no["horse5"]["destination"] = #po["brownie"]
dirs = {E, E, N, E, S, S, E, S, W, W, S, W, N, N, W, N}
cdir = 1
function h5redir(value, sender)
    if #sender == sender["destination"] then
         cdir = cdir + 1
         if cdir > #dirs then
             cdir = 1
         end
         sender["destination"] = sender["destination"] + dirs[cdir]
    end
end

  ]]></el:luamain>
    <el:i18n>
	 <el:string el:key="title">
	   <el:english el:translate="false"/>
	 </el:string>
   </el:i18n>
  </el:protected>
</el:level>

